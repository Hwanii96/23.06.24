package day02_basic;

public class Ex04_primitive_type {

	public static void main(String[] args) {
		
//		/*을 치면 그 이후에 엔터를 입력하면서 자동으로 주석 처리 된다.
		
		/*
		 * 기본 자료형 (primitive type)
		 * - 값을 저장하는 자료형 
		 * 
		 * 1. 정수형
		 * 		1) byte
		 * 			(1) 크기 : 1바이트 (8비트) 0000 0000 각각이 1비트
		 * 			(2) 개수 : 2의 8제곱 (256개)
		 * 			(3) 범위 : -128 ~ 127 (-2의 7제곱 ~ 2의 7제곱 - 1)
		 * 			(4) 용도 : 이미지, 동영상 등을 그대로 저장하기 위한 byte 배열용
		 *
		 * 		2) short
		 * 			(1) 크기 : 2바이트 (16비트)
		 * 			(2) 개수 : 2의 16제곱 (65,536개)
		 * 			(3) 범위 : -32,768 ~ 32,767 (-2의 16제곱 ~ 2의 16제곱 -1)
		 * 		
		 * 		3) int
		 * 			(1) 크기 : 4바이트 (32비트)
		 * 			(2) 개수 : 2의 32제곱 (4,294,967,296개)
		 * 			(3) 범위 : -2,147,483,648 ~ 2,147,483,647
		 * 			(4) 용도 : 일반적인 정수 저장용
		 * 		
		 * 		4) long
		 * 			(1) 크기 : 8바이트 (64비트)
		 * 			(2) 개수 : 2의 64제곱
		 * 			(3) 범위 : 
		 * 			(4) 용도 : int 보다 크거나 작은 정수 저장용
		 * 
		 * 		5) 100억 : 10,000,000,000
		 * 					10000000000 이라고 처리는 안되고,
		 * 					10000000000L 이라고 표기를 해야한다.
		 * 					(int 범위를 벗어나는 정수 값은 접미사 L이 필요)
		 * 		
		 * 		6) 만약 long 형으로도 처리가 안되는 숫자는 BigInteger 클래스를 이용하면 된다.
		 * 
		 * 2. 실수형
		 * 		1) float
		 * 			(1) 크기 : 4바이트
		 * 			(2) 범위 : -1.4E-45 ~ (-, 1.4 곱하기 10의 -45 제곱)
		 * 		2) double
		 * 			(1) 크기 : 8바이트
		 * 			(2) 범위 : -4.0E-324 ~
		 * 
		 * 		3) 구성 : 부호 + 소수부 + 지수부
		 * 	
		 * 3. 문자형
		 * 		1) char
		 * 			(1) 크기 : 2바이트 (c언어의 char는 1바이트)
		 * 			(2) 일반 문자 크기 :
		 * 				- 영문 : 1바이트
		 * 				- 한글 : 2바이트
		 * 			(3) 문자 표현 코드
		 * 				- ASCII : 1바이트 영문 국제 표준 코드 (C)
		 * 				- UNICODE : 2바이트 국제 표준 코드 (JAVA)
		 * 
		 * 4. 논리형
		 * 		1) boolean
		 * 			(1) 크기 : 이론상 1비트	
		 * 			(2) 참 : true		
		 * 			(3) 거짓 : false		
		 * 
		 */
		
//		정수
		byte a=127;
		short b=32767;
		int c=100000;
		long d=10000000000L;
//		공간은 a, b, c, d 이고, 우변에 있는것들은 전부 값. 값을 좌변의 공간에 대입한다 혹은 저장한다.
//		변수 : 변하는 수
//		byte a 는 선언 !
//		=127 는 변수의 초기화 !
//		초기화는 초창기 값을 지정해주는 것을 의미한다.
		
//		동일한 코드 복사 : 커서를 두고 ctrl + alt + 방향키(↑, ↓)
		
		System.out.println(a);
		System.out.println(b);
		System.out.println(c);
		System.out.println(d);
		
//	    system.out.println(a), (b), (c), (d)의 각각 a, b, c, d는 값이다.
//		즉, 변수a, b, c, d의 값을 출력한다는 명령문 이다.
		
//		실수
		float e=3.141592F; // float 타입에 저장하는 실수는 접미사 F를 붙힌다.
		double f=3.141592;
		
		System.out.println(e);
		System.out.println(f);
		
//		문자
		char ch1='A';
		char ch2='한';
		
		System.out.println(ch1);
		System.out.println(ch2);
		
//		주의할 점 : char 형은 'A'의 코드값 + '한'의 코드값 이 된다. => 54685
		System.out.println(ch1+ch2);
		
		System.out.println(""+ch1+ch2);
//		좌에서 우로 컴퓨터는 읽으니, A한 이 된다. ""이 있는 순간 문자가 된다.
		
//		논리값
//		논리값은 일반적으로 변수명이 is로 시작한다.
		boolean isPositive; // 양수인가?
		isPositive=true;
		if(isPositive) {
			System.out.println("양수이다.");
		}
//      boolean isPositive; 얘는 공간(변수)을 선언만 해준 것이다. 
//		변수(공간)은 초기화 하지 않아도 공간만 확보한다는 개념으로 선언만 할 수 있다.
//		선언과 초기화를 분리시켜도 되고 합쳐서 한번에 해도 된다.
  	}

}
